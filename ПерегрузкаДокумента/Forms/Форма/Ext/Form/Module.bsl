
&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выбор файла";
	Диалог.Фильтр = "*.txt";
	Диалог.ИндексФильтра = 0;
	Диалог.ПредварительныйПросмотр = Ложь;
	Диалог.ПроверятьСуществованиеФайла = Истина;
	Диалог.МножественныйВыбор = Ложь; 
	Диалог.ПолноеИмяФайла = Объект.ПутьКФайлу;
	
	Если Диалог.Выбрать() Тогда
		Объект.ПутьКФайлу = Диалог.ПолноеИмяФайла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотрФайла(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПутьКФайлу", Объект.ПутьКФайлу);
	
	ОткрытьФорму("ВнешняяОбработка.ПерегрузкаДокумента.Форма.ФормаПросмотраФайла", ПараметрыФормы
	,,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьОбъект(Команда)
	
	Если Объект.ДокументСсылка.Пустая() Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Объект не выбран";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	СтруктураФайла = ВыгрузитьОбъектНаСервере();
	
	ФайлТХТ = СтруктураФайла.Файл;
	
	Попытка
		ФайлТХТ.НачатьЗапись(, СтруктураФайла.Путь, КодировкаТекста.UTF8, Символы.ПС);
		Объект.ПутьКФайлу = СтруктураФайла.Путь;
	Исключение
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Не удалось записать файл по причине: " + ОписаниеОшибки();
		Сообщение.Сообщить();
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Функция ВыгрузитьОбъектНаСервере()
	
	МетаданныеОбъекта = Объект.ДокументСсылка.Метаданные();
	ФайлТХТ = Новый ТекстовыйДокумент;
	ИмяФайла = СтрЗаменить(Строка(Объект.ДокументСсылка), ".", "-");
	ИмяФайла = СтрЗаменить(ИмяФайла, ":", "-") + ".txt";
	
	Стр = Метаданные.НайтиПоТипу(ТипЗнч(Объект.ДокументСсылка)).ПолноеИмя();
	ФайлТХТ.ДобавитьСтроку("ДокументСсылка$" + СтрЗаменить(Стр, "Документ.", ""));
	
	Для Каждого Реквизит Из МетаданныеОбъекта.СтандартныеРеквизиты Цикл 
		
		Если Реквизит.Имя = "Ссылка" ИЛИ Реквизит.Имя = "ПометкаУдаления"
			ИЛИ Реквизит.Имя = "Номер" Тогда
			Продолжить;
		КонецЕсли;
		
		РеквизитИмя = Реквизит.Имя;
		Значение = Объект.ДокументСсылка[Реквизит.Имя];
		ТипЗначения = ТипЗнч(Объект.ДокументСсылка[Реквизит.Имя]);
		
		ФайлТХТ.ДобавитьСтроку(РеквизитИмя + "$" + Значение);
		
	КонецЦикла;
	
	Для Каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
		
		РеквизитИмя = Реквизит.Имя;
		Значение = Объект.ДокументСсылка[Реквизит.Имя];
		ТипЗначения = ТипЗнч(Объект.ДокументСсылка[Реквизит.Имя]);
		
		Если Справочники.ТипВсеСсылки().СодержитТип(ТипЗначения) Тогда
			ФайлТХТ.ДобавитьСтроку(РеквизитИмя + "$" + Значение + "$" + Объект.ДокументСсылка[РеквизитИмя].Код);
			Продолжить;	
		КонецЕсли;
		
		Если ПланыСчетов.ТипВсеСсылки().СодержитТип(ТипЗначения) Тогда
			ФайлТХТ.ДобавитьСтроку(РеквизитИмя + "$" + Значение + "$" + Объект.ДокументСсылка[РеквизитИмя].Код);
			Продолжить;	
		КонецЕсли;
		
		Если Документы.ТипВсеСсылки().СодержитТип(ТипЗначения) Тогда
			ФайлТХТ.ДобавитьСтроку(РеквизитИмя + "$" + Значение + "$" + Объект.ДокументСсылка[РеквизитИмя].Номер + "$" + Объект.ДокументСсылка[РеквизитИмя].Дата);
			Продолжить;
		КонецЕсли;
		
		ФайлТХТ.ДобавитьСтроку(РеквизитИмя + "$" + Значение);
		
	КонецЦикла;
	
	Для Каждого ТабЧасть Из МетаданныеОбъекта.ТабличныеЧасти Цикл
		
		ФайлТХТ.ДобавитьСтроку("Таблица" + "$" + ТабЧасть.Имя);
		
		Для Каждого Строка Из Объект.ДокументСсылка[ТабЧасть.Имя] Цикл
			
			//Начало Строки табличной части
			ФайлТХТ.ДобавитьСтроку("СтрокаНачало$[");	
			
			Для Каждого РеквизитТБ Из МетаданныеОбъекта.ТабличныеЧасти[ТабЧасть.Имя].Реквизиты Цикл 
				
				РеквизитИмя = РеквизитТБ.Имя;
				Значение = Строка[РеквизитИмя];
				ТипЗначения = ТипЗнч(Строка[РеквизитИмя]);
								
				Если ТипЗначения = Тип("Неопределено") Тогда
					ФайлТХТ.ДобавитьСтроку("СтрокаТабЧасти" + "$" + РеквизитИмя + "$" + Значение);
					Продолжить;
				КонецЕсли;
				
				Если Справочники.ТипВсеСсылки().СодержитТип(ТипЗначения) Тогда
					ФайлТХТ.ДобавитьСтроку("СтрокаТабЧасти" + "$" + РеквизитИмя + "$" + Значение + "$" + Строка[РеквизитИмя].Код);
					Продолжить;	
				КонецЕсли;
				
				Если ПланыСчетов.ТипВсеСсылки().СодержитТип(ТипЗначения) Тогда
					ФайлТХТ.ДобавитьСтроку("СтрокаТабЧасти" + "$" + РеквизитИмя + "$" + Значение + "$" + Строка[РеквизитИмя].Код);
					Продолжить;	
				КонецЕсли;
				
				Если Документы.ТипВсеСсылки().СодержитТип(ТипЗначения) Тогда
					ФайлТХТ.ДобавитьСтроку("СтрокаТабЧасти" + "$" + РеквизитИмя + "$" + Значение + "$" + Строка[РеквизитИмя].Номер + "$" + Строка[РеквизитИмя].Дата);
					Продолжить;
				КонецЕсли;
				
				ФайлТХТ.ДобавитьСтроку("СтрокаТабЧасти" + "$" + РеквизитИмя + "$" + Значение);		
			КонецЦикла;
			
			//Конец Стркои табличной части
			ФайлТХТ.ДобавитьСтроку("СтрокаКонец$]");
		КонецЦикла;
		
	КонецЦикла;
	
	ОбъектВЗначение = РеквизитФормыВЗначение("Объект");
	ИмяОбработки = ОбъектВЗначение.Метаданные().Имя + ".epf";
	ПутьОбработки = СтрЗаменить(ОбъектВЗначение.ИспользуемоеИмяФайла, ИмяОбработки, "");
	
	СтруктураФайла = Новый Структура;
	СтруктураФайла.Вставить("Файл", ФайлТХТ);
	СтруктураФайла.Вставить("Путь", ПутьОбработки + ИмяФайла);
	
	Возврат СтруктураФайла;
	
КонецФункции 


&НаКлиенте
Процедура ЗагрузитьОбъект(Команда)
	ЗагрузитьОбъектНаСервере();
КонецПроцедуры


&НаСервере
Процедура ЗагрузитьОбъектНаСервере()
	ФайлТХТ = Новый ТекстовыйДокумент;
	
	Попытка
		ФайлТХТ.Прочитать(Объект.ПутьКФайлу);
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не удалось прочитать файл по причине: " + ОписаниеОшибки();
		Сообщение.Сообщить();
		Возврат;
	КонецПопытки;
	
	НовыйДокумент = "";
	Проводить = Ложь;
	ТекущаяТаблицаИмя = "";
	СтрокаТБ = "";
	Для Индекс = 1 По ФайлТХТ.КоличествоСтрок() Цикл
		
		Строка = ФайлТХТ.ПолучитьСтроку(Индекс);
		МассивСтрока = СтрРазделить(Строка, "$", Истина);
		Свойство = МассивСтрока[0];
		Значение = МассивСтрока[1];
		
		Если Индекс = 1 Тогда
			НовыйДокумент = СоздатьНовыйДокумент(Свойство, Значение);
			Продолжить;
		КонецЕсли;
		
		Если Свойство = "Проведен" Тогда
			Проводить = ?(Значение = "Да", Истина, Ложь);
			Продолжить;
		КонецЕсли;
		
		Если Свойство = "Таблица" Тогда
			ТекущаяТаблицаИмя = Значение;
			Продолжить;
		КонецЕсли;
		
		Если Свойство = "СтрокаНачало" Тогда
			СтрокаТБ = НовыйДокумент[ТекущаяТаблицаИмя].Добавить();
			Продолжить;
		КонецЕсли;
		
		Если Свойство = "СтрокаКонец" Тогда
			Продолжить;
		КонецЕсли;
		
		Если Свойство = "СтрокаТабЧасти" Тогда
			ЗаполнитьСтрокуТБ(НовыйДокумент, ТекущаяТаблицаИмя, СтрокаТБ, МассивСтрока);
			Продолжить;
		КонецЕсли;
		
		Если Справочники.ТипВсеСсылки().СодержитТип((ТипЗнч(НовыйДокумент[Свойство]))) Тогда
			ДопЗначение = МассивСтрока[2];
			ЗаполнитьСправочник(НовыйДокумент, Свойство, Значение, ДопЗначение);
			Продолжить;
		КонецЕсли;
		
		Если ПланыСчетов.ТипВсеСсылки().СодержитТип((ТипЗнч(НовыйДокумент[Свойство]))) Тогда
			ДопЗначение = МассивСтрока[2];
			ЗаполнитьПланСчетов(НовыйДокумент, Свойство, Значение, ДопЗначение);
			Продолжить;
		КонецЕсли;
		
		Если Документы.ТипВсеСсылки().СодержитТип((ТипЗнч(НовыйДокумент[Свойство]))) Тогда
			ДопЗначение = МассивСтрока[2];
			ДатаДокумента = МассивСтрока[3];
			ЗаполнитьДокумент(НовыйДокумент, Свойство, Значение, ДопЗначение, ДатаДокумента);
			Продолжить;
		КонецЕсли;
		
		Если Перечисления.ТипВсеСсылки().СодержитТип((ТипЗнч(НовыйДокумент[Свойство]))) Тогда
			ЗаполнитьПеречисление(НовыйДокумент, Свойство, Значение);
			Продолжить;
		КонецЕсли; 
		
		НовыйДокумент[Свойство] = Значение;
		
		Сообщить(Строка);
		
	КонецЦикла;
	
	НовыйДокумент.Комментарий = НовыйДокумент.Комментарий + "Документ создан обработкой 'Перегрузка документов'!";
	
	НовыйДокумент.Записать();
	
КонецПроцедуры


&НаСервереБезКонтекста
Функция СоздатьНовыйДокумент(Свойство, Значение)
	ИмяДокумента = Метаданные.НайтиПоТипу(Тип(Свойство + "." + Значение)).Имя;
	Возврат Документы[ИмяДокумента].СоздатьДокумент();
КонецФункции 


&НаСервереБезКонтекста
Процедура ЗаполнитьСтрокуТБ(Документ, ИмяТаблицы, СтрокаТБ, ВходящийМассив)
	Свойство = ВходящийМассив[1];
	Значение = ВходящийМассив[2];
	
	Если ТипЗнч(СтрокаТБ[Свойство]) = Тип("Неопределено") Тогда
		
		Если Свойство = "Субконто" Тогда
			СтрокаТБ[Свойство] = Справочники.НоменклатурныеГруппы.НайтиПоКоду(ВходящийМассив[3]);
		КонецЕсли;
		
		СтрокаТБ[Свойство] = Значение;
		Возврат;
	КонецЕсли;
	
	Если Справочники.ТипВсеСсылки().СодержитТип((ТипЗнч(СтрокаТБ[Свойство]))) Тогда
		ДопЗначение = ВходящийМассив[3]; 
		ЗаполнитьСправочник(СтрокаТБ, Свойство, Значение, ДопЗначение);
		Возврат;
	КонецЕсли;
	
	Если Документы.ТипВсеСсылки().СодержитТип((ТипЗнч(СтрокаТБ[Свойство]))) Тогда
		ДопЗначение = ВходящийМассив[3];
		ДатаДокумента = ВходящийМассив[4];
		ЗаполнитьДокумент(СтрокаТБ, Свойство, Значение, ДопЗначение, ДатаДокумента);
		Возврат;
	КонецЕсли;
	
	Если ПланыСчетов.ТипВсеСсылки().СодержитТип((ТипЗнч(СтрокаТБ[Свойство]))) Тогда
		ДопЗначение = ВходящийМассив[3];
		ЗаполнитьПланСчетов(СтрокаТБ, Свойство, Значение, ДопЗначение);
		Возврат;
	КонецЕсли;
	
	Если Перечисления.ТипВсеСсылки().СодержитТип((ТипЗнч(СтрокаТБ[Свойство]))) Тогда
		ЗаполнитьПеречисление(СтрокаТБ, Свойство, Значение);
		Возврат;
	КонецЕсли;
	
	СтрокаТБ[Свойство] = Значение;
	
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ЗаполнитьСправочник(НовыйДокумент, Свойство, Значение, ДопЗначение)
	СправочникИмя = Метаданные.НайтиПоТипу(ТипЗнч(НовыйДокумент[Свойство])).ПолноеИмя();
	СправочникИмя = СтрЗаменить(СправочникИмя, "Справочник.", "");
	СправочникСсылка = Справочники[СправочникИмя].НайтиПоКоду(ДопЗначение);
	НовыйДокумент[Свойство] = СправочникСсылка;	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьПланСчетов(НовыйДокумент, Свойство, Значение, ДопЗначение)
	ПланСчетовИмя = Метаданные.НайтиПоТипу(ТипЗнч(НовыйДокумент[Свойство])).ПолноеИмя();
	ПланСчетовИмя = СтрЗаменить(ПланСчетовИмя, "ПланСчетов.", "");
	ПланСчетовСсылка = ПланыСчетов[ПланСчетовИмя].НайтиПоКоду(ДопЗначение);
	НовыйДокумент[Свойство] = ПланСчетовСсылка;	
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ЗаполнитьПеречисление(НовыйДокумент, Свойство, Значение)
	
	Если Значение = "" Тогда
		Возврат;	
	КонецЕсли;
	
	Если Свойство = "СтавкаНДС" Тогда
		Значение = "НДС" + СтрЗаменить(Значение, "%", "");	
	КонецЕсли;
	
	ПеречислениеИмя = Метаданные.НайтиПоТипу(ТипЗнч(НовыйДокумент[Свойство])).ПолноеИмя();
	ПеречислениеИмя = СтрЗаменить(ПеречислениеИмя, "Перечисление.", "");
	ПеречислениеСсылка = Перечисления[ПеречислениеИмя][Значение];
	НовыйДокумент[Свойство] = ПеречислениеСсылка;
КонецПроцедуры 


&НаСервереБезКонтекста
Процедура ЗаполнитьДокумент(НовыйДокумент, Свойство, Значение, ДопЗначение, ДатаДокумента)
	ДокументИмя = Метаданные.НайтиПоТипу(ТипЗнч(НовыйДокумент[Свойство])).ПолноеИмя();
	ДокументИмя = СтрЗаменить(ДокументИмя, "Документ.", "");
	ДокументСсылка = Документы[ДокументИмя].НайтиПоНомеру(ДопЗначение, ДатаДокумента);
	НовыйДокумент[Свойство] = ДокументСсылка;	
КонецПроцедуры

